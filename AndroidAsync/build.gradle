buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url 'https://dl.bintray.com/yunarta-kartawahyudi/maven/' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0-alpha2'
        classpath 'com.mobilesolutionworks:works-autoconfig:1.0.0'
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

repositories {
    maven {
        credentials {
            username properties.getProperty('maven1.user')
            password properties.getProperty('maven1.password')
        }
        authentication {
            basic(BasicAuthentication)
        }

        url 'https://bitbucket.org/v-cube/repository_maven/raw/snapshot/'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

group 'jp.co.vcube.android'
version '2.1.12'

android {
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'

            jniLibs.srcDirs = ['libs/']

            java.srcDirs=['src/'
//                          , '../conscrypt/'
//                          , '../compat/'
            ]
        }
        androidTest.java.srcDirs=['test/src/']
        androidTest.res.srcDirs=['test/res/']
        androidTest.assets.srcDirs=['test/assets/']
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        targetSdkVersion 23
        minSdkVersion 9
        versionCode 1
        versionName version
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.3"
}

def generatePom() {
    def pom = pom {
        project {
            name 'AndroidAsync'
            packaging 'aar'
            groupId project.group
            artifactId 'AndroidAsync'
            version project.version
            inceptionYear '2015'

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0'
                    distribution 'repo'
                }
            }

            scm {
                url "https://bitbucket.org/v-cube/github-fork-androidasync"
                connection "scm:git:git@bitbucket.org:v-cube/github-fork-androidasync.git"
                developerConnection "scm:git:git@bitbucket.org:v-cube/github-fork-androidasync.git"
            }


            developers {
                developer {
                    id 'yunarta'
                    name 'Yunarta Kartawahyudi'
                    email 'yunarta@vcube.co.jp'
                    url 'http://sg.linkedin.com/in/yunarta/'
                    roles {
                        role 'author'
                        role 'developer'
                    }
                    timezone '+8'
                }
            }
        }
    }
}

// maven upload
uploadArchives {
    if (properties.containsKey('maven.repo.local')) {
        repositories {
            mavenDeployer {
                pom = generatePom()

                repository(url:new File(properties.getProperty('maven.repo.local')).toURI()) {
                }
            }
        }
    }
    else
    {
        def repo = System.getProperty('HOME') + '/.m2/repository'
        repositories {
            mavenDeployer {
                pom = generatePom()
                repository(url:new File(repo).toURI()) {

                }
            }
        }
    }
}

artifacts {
}